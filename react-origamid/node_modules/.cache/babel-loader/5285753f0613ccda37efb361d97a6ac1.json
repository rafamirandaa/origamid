{"ast":null,"code":"var _jsxFileName = \"/home/rafa/Projetos/origamid/react-origamid/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\"; // Otimize o código do slide anterior\n// Utilizando a array abaixo para mostrar\n// cada checkbox na tela.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const coresArray = ['azul', 'roxo', 'laranja', 'verde', 'vermelho', 'cinza'];\n  const [cores, setCores] = React.useState([]);\n  const [checked, setChecked] = React.useState(false);\n\n  function handleClick(_ref) {\n    let {\n      target\n    } = _ref;\n    if (target.name !== cores.find(cor => cor)) setCores([...cores, target.name]);else {\n      cores.filter(cor => setChecked(cor !== cores));\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: coresArray.map(cor => /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        name: cor,\n        id: \"\",\n        checked: () => checked,\n        onChange: handleClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), cor]\n    }, cor, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"yTD/DT576XNODuVQONjWzMxSuVw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","App","coresArray","cores","setCores","useState","checked","setChecked","handleClick","target","name","find","cor","filter","map"],"sources":["/home/rafa/Projetos/origamid/react-origamid/src/App.jsx"],"sourcesContent":["import React from \"react\";\n\n// Otimize o código do slide anterior\n// Utilizando a array abaixo para mostrar\n// cada checkbox na tela.\n\nfunction App() {\n\nconst coresArray = ['azul', 'roxo', 'laranja', 'verde', 'vermelho', 'cinza'];\n\nconst [cores, setCores] = React.useState([])\nconst [checked, setChecked] = React.useState(false)\n\nfunction handleClick({ target }) {\n  if(target.name !== cores.find((cor) => cor))\n    setCores([...cores, target.name])\n  else {\n    cores.filter((cor) => setChecked(cor !== cores))\n  }\n}\n\n  return (\n    <form>\n      {coresArray.map((cor) => \n        <label key={cor}>\n          <input type=\"radio\" name={cor} id=\"\" checked={() => checked} onChange={handleClick} />\n          {cor}\n        </label>\n       )}\n    </form>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;AACA;AACA;;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EAEf,MAAMC,UAAU,GAAG,CAAC,MAAD,EAAS,MAAT,EAAiB,SAAjB,EAA4B,OAA5B,EAAqC,UAArC,EAAiD,OAAjD,CAAnB;EAEA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,KAAK,CAACK,QAAN,CAAe,EAAf,CAA1B;EACA,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,KAAK,CAACK,QAAN,CAAe,KAAf,CAA9B;;EAEA,SAASG,WAAT,OAAiC;IAAA,IAAZ;MAAEC;IAAF,CAAY;IAC/B,IAAGA,MAAM,CAACC,IAAP,KAAgBP,KAAK,CAACQ,IAAN,CAAYC,GAAD,IAASA,GAApB,CAAnB,EACER,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWM,MAAM,CAACC,IAAlB,CAAD,CAAR,CADF,KAEK;MACHP,KAAK,CAACU,MAAN,CAAcD,GAAD,IAASL,UAAU,CAACK,GAAG,KAAKT,KAAT,CAAhC;IACD;EACF;;EAEC,oBACE;IAAA,UACGD,UAAU,CAACY,GAAX,CAAgBF,GAAD,iBACd;MAAA,wBACE;QAAO,IAAI,EAAC,OAAZ;QAAoB,IAAI,EAAEA,GAA1B;QAA+B,EAAE,EAAC,EAAlC;QAAqC,OAAO,EAAE,MAAMN,OAApD;QAA6D,QAAQ,EAAEE;MAAvE;QAAA;QAAA;QAAA;MAAA,QADF,EAEGI,GAFH;IAAA,GAAYA,GAAZ;MAAA;MAAA;MAAA;IAAA,QADD;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAUD;;GAzBQX,G;;KAAAA,G;AA2BT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}