{"ast":null,"code":"var _jsxFileName = \"/home/rafa/Projetos/origamid/react-origamid/src/Form/Radio.jsx\";\nimport React from 'react';\nimport CSS from '../style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Radio(_ref) {\n  let {\n    pergunta,\n    options,\n    active,\n    value,\n    onChange,\n    id\n  } = _ref;\n\n  /*   if(active === false) return null; */\n  return /*#__PURE__*/_jsxDEV(\"fieldset\", {\n    id: CSS,\n    children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n      style: {\n        fontWeight: 'bold'\n      },\n      children: pergunta\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), options.map((option, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        checked: value === option,\n        value: option,\n        id: id,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 11\n      }, this), option]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Radio;\nexport default Radio;\n\nvar _c;\n\n$RefreshReg$(_c, \"Radio\");","map":{"version":3,"names":["React","CSS","Radio","pergunta","options","active","value","onChange","id","fontWeight","map","option","index"],"sources":["/home/rafa/Projetos/origamid/react-origamid/src/Form/Radio.jsx"],"sourcesContent":["import React from 'react'\nimport CSS from '../style.css'\n\nfunction Radio({pergunta, options, active, value, onChange, id}) {\n/*   if(active === false) return null; */\n  return (\n    <fieldset id={CSS}>\n      <legend style={{ fontWeight: 'bold' }}>{pergunta}</legend>\n      {options.map((option, index) => (\n        <label key={index}>\n          <input \n          type=\"radio\" \n          checked={value === option} \n          value={option} \n          id={id}\n          onChange={onChange} />\n          {option}\n        </label>\n      ))}\n    </fieldset>\n  )\n}\n\nexport default Radio\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,cAAhB;;;AAEA,SAASC,KAAT,OAAiE;EAAA,IAAlD;IAACC,QAAD;IAAWC,OAAX;IAAoBC,MAApB;IAA4BC,KAA5B;IAAmCC,QAAnC;IAA6CC;EAA7C,CAAkD;;EACjE;EACE,oBACE;IAAU,EAAE,EAAEP,GAAd;IAAA,wBACE;MAAQ,KAAK,EAAE;QAAEQ,UAAU,EAAE;MAAd,CAAf;MAAA,UAAwCN;IAAxC;MAAA;MAAA;MAAA;IAAA,QADF,EAEGC,OAAO,CAACM,GAAR,CAAY,CAACC,MAAD,EAASC,KAAT,kBACX;MAAA,wBACE;QACA,IAAI,EAAC,OADL;QAEA,OAAO,EAAEN,KAAK,KAAKK,MAFnB;QAGA,KAAK,EAAEA,MAHP;QAIA,EAAE,EAAEH,EAJJ;QAKA,QAAQ,EAAED;MALV;QAAA;QAAA;QAAA;MAAA,QADF,EAOGI,MAPH;IAAA,GAAYC,KAAZ;MAAA;MAAA;MAAA;IAAA,QADD,CAFH;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAgBD;;KAlBQV,K;AAoBT,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}