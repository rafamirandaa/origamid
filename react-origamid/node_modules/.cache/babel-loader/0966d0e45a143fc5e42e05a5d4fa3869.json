{"ast":null,"code":"var _jsxFileName = \"/home/rafa/Projetos/origamid/react-origamid/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\"; // Otimize o código do slide anterior\n// Utilizando a array abaixo para mostrar\n// cada checkbox na tela.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const coresArray = ['azul', 'roxo', 'laranja', 'verde', 'vermelho', 'cinza'];\n  const [cores, setCores] = React.useState([]);\n\n  function handleClick(_ref) {\n    let {\n      target\n    } = _ref;\n\n    if (target.checked) {\n      setCores([...cores, target.value]);\n    } else {\n      setCores(cores.filter(cor => cor !== target.value));\n    }\n  }\n\n  function handleChecked(cor) {\n    return cores.includes(cor);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: coresArray.map(cor => /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        value: cor,\n        id: \"\",\n        checked: handleChecked(cor),\n        onChange: handleClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), cor]\n    }, cor, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"2Qg+vKdm7xWUKyqOih7UQQnJS0g=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","App","coresArray","cores","setCores","useState","handleClick","target","checked","value","filter","cor","handleChecked","includes","map"],"sources":["/home/rafa/Projetos/origamid/react-origamid/src/App.jsx"],"sourcesContent":["import React from \"react\";\n\n// Otimize o código do slide anterior\n// Utilizando a array abaixo para mostrar\n// cada checkbox na tela.\n\nfunction App() {\n\nconst coresArray = ['azul', 'roxo', 'laranja', 'verde', 'vermelho', 'cinza'];\n\nconst [cores, setCores] = React.useState([])\n\n\nfunction handleClick({ target }) {\n  if(target.checked){\n    setCores([...cores, target.value])\n  } else {\n    setCores(cores.filter((cor) => cor !== target.value))\n  }\n}\n\nfunction handleChecked(cor){\n  return cores.includes(cor);\n}\n\n  return (\n    <form>\n      {coresArray.map((cor) => \n        <label key={cor}>\n          <input type=\"checkbox\" value={cor} id=\"\" checked={handleChecked(cor)} onChange={handleClick} />\n          {cor}\n        </label>\n       )}\n    </form>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;AACA;AACA;;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EAEf,MAAMC,UAAU,GAAG,CAAC,MAAD,EAAS,MAAT,EAAiB,SAAjB,EAA4B,OAA5B,EAAqC,UAArC,EAAiD,OAAjD,CAAnB;EAEA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,KAAK,CAACK,QAAN,CAAe,EAAf,CAA1B;;EAGA,SAASC,WAAT,OAAiC;IAAA,IAAZ;MAAEC;IAAF,CAAY;;IAC/B,IAAGA,MAAM,CAACC,OAAV,EAAkB;MAChBJ,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWI,MAAM,CAACE,KAAlB,CAAD,CAAR;IACD,CAFD,MAEO;MACLL,QAAQ,CAACD,KAAK,CAACO,MAAN,CAAcC,GAAD,IAASA,GAAG,KAAKJ,MAAM,CAACE,KAArC,CAAD,CAAR;IACD;EACF;;EAED,SAASG,aAAT,CAAuBD,GAAvB,EAA2B;IACzB,OAAOR,KAAK,CAACU,QAAN,CAAeF,GAAf,CAAP;EACD;;EAEC,oBACE;IAAA,UACGT,UAAU,CAACY,GAAX,CAAgBH,GAAD,iBACd;MAAA,wBACE;QAAO,IAAI,EAAC,UAAZ;QAAuB,KAAK,EAAEA,GAA9B;QAAmC,EAAE,EAAC,EAAtC;QAAyC,OAAO,EAAEC,aAAa,CAACD,GAAD,CAA/D;QAAsE,QAAQ,EAAEL;MAAhF;QAAA;QAAA;QAAA;MAAA,QADF,EAEGK,GAFH;IAAA,GAAYA,GAAZ;MAAA;MAAA;MAAA;IAAA,QADD;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAUD;;GA7BQV,G;;KAAAA,G;AA+BT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}