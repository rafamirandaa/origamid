{"ast":null,"code":"var _jsxFileName = \"/home/rafa/Projetos/origamid/react-origamid/src/GlobalContext.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react'; // Utilize o GlobalContext do exemplo anterior para puxar os dados da API abaixo:\n// https://ranekapi.origamid.dev/json/api/produto/\n// assim que o usuário acessar o app\n// coloque os dados da API no contexto global, dando acesso aos dados da mesma\n// defina uma função chamada limparDados que é responsável por zerar os dados de produto\n// e exponha essa função no contexto global\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GlobalContext = /*#__PURE__*/React.createContext();\nexport const GlobalStorage = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [dados, setDados] = React.useState(null);\n\n  const limparDados = () => {\n    setDados(null);\n  };\n\n  React.useEffect(() => {\n    fetch('https://ranekapi.origamid.dev/json/api/produto/').then(response => response.json()).then(json => setDados(json));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      fetchApi: dados,\n      nome: 'Rafael',\n      limparDados\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 10\n  }, this);\n};\n\n_s(GlobalStorage, \"NQOQEWwvgApxmvJtbFdUWW1tEhI=\");\n\n_c = GlobalStorage;\n\nvar _c;\n\n$RefreshReg$(_c, \"GlobalStorage\");","map":{"version":3,"names":["React","GlobalContext","createContext","GlobalStorage","children","dados","setDados","useState","limparDados","useEffect","fetch","then","response","json","fetchApi","nome"],"sources":["/home/rafa/Projetos/origamid/react-origamid/src/GlobalContext.jsx"],"sourcesContent":["import React from 'react'\n\n// Utilize o GlobalContext do exemplo anterior para puxar os dados da API abaixo:\n// https://ranekapi.origamid.dev/json/api/produto/\n// assim que o usuário acessar o app\n// coloque os dados da API no contexto global, dando acesso aos dados da mesma\n// defina uma função chamada limparDados que é responsável por zerar os dados de produto\n// e exponha essa função no contexto global\n\nexport const GlobalContext = React.createContext();\n\nexport const GlobalStorage = ({children}) => {\n  const [dados, setDados] = React.useState(null);\n\n  const limparDados = () => {\n    setDados(null);\n  }\n\n  React.useEffect(() => {\n    fetch('https://ranekapi.origamid.dev/json/api/produto/')\n    .then((response) => response.json())\n    .then((json) => setDados(json))\n  }, [])\n\n  return <GlobalContext.Provider value={{ fetchApi: dados, nome: 'Rafael', limparDados}}>{children}</GlobalContext.Provider>\n}"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA,OAAO,MAAMC,aAAa,gBAAGD,KAAK,CAACE,aAAN,EAAtB;AAEP,OAAO,MAAMC,aAAa,GAAG,QAAgB;EAAA;;EAAA,IAAf;IAACC;EAAD,CAAe;EAC3C,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,KAAK,CAACO,QAAN,CAAe,IAAf,CAA1B;;EAEA,MAAMC,WAAW,GAAG,MAAM;IACxBF,QAAQ,CAAC,IAAD,CAAR;EACD,CAFD;;EAIAN,KAAK,CAACS,SAAN,CAAgB,MAAM;IACpBC,KAAK,CAAC,iDAAD,CAAL,CACCC,IADD,CACOC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADpB,EAECF,IAFD,CAEOE,IAAD,IAAUP,QAAQ,CAACO,IAAD,CAFxB;EAGD,CAJD,EAIG,EAJH;EAMA,oBAAO,QAAC,aAAD,CAAe,QAAf;IAAwB,KAAK,EAAE;MAAEC,QAAQ,EAAET,KAAZ;MAAmBU,IAAI,EAAE,QAAzB;MAAmCP;IAAnC,CAA/B;IAAA,UAAiFJ;EAAjF;IAAA;IAAA;IAAA;EAAA,QAAP;AACD,CAdM;;GAAMD,a;;KAAAA,a"},"metadata":{},"sourceType":"module"}